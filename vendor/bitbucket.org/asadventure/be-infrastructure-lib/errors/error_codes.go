package errors

import (
	"bitbucket.org/asadventure/be-core-lib/errors"
	"bitbucket.org/asadventure/be-infrastructure-lib/errors/config"
)

// Error codes
var (
	ErrorMethodNotImplemented                = config.GetError("INFRA-1", "Method not implemented", errors.Error)
	ErrorUndefinedRoute                      = config.GetError("INFRA-2", "Undefined route", errors.Error)
	ErrorMigrationErrorTemplate              = config.GetError("INFRA-3", "Migrations: error: %s", errors.Error)
	ErrorMigrationMissingErrorTemplate       = config.GetError("INFRA-4", "Missing migration: %s", errors.Error)
	ErrorMigration                           = config.GetError("INFRA-5", "Migration error", errors.Error)
	ErrorInRabbitMQConsumer                  = config.GetError("INFRA-6", "RabbitMQ Consumer Recovered from Panic:  Exchange: %s, Routing Key: %s, Message: %s", errors.Error)
	ErrorInSQSConsumer                       = config.GetError("INFRA-7", "SQS Consumer Recovered from Panic: Queue: %s, Message Attributes: %s, Message: %s", errors.Error)
	ErrorInStateMachineUnimplementedCallback = config.GetError("INFRA-8", "The event [%s] for callback %s is not implemented", errors.Error)
	ErrorInStateMachineTransition            = config.GetError("INFRA-9", "Error while checking the transition from status[%d] to status[%d] [%s]", errors.Error)
	ErrorInStateMachineInvalidTransition     = config.GetError("INFRA-10", "Invalid transition from status [%s] to [%s] for user [%s]", errors.Error)
	ErrorInStateMachineNotFound              = config.GetError("INFRA-11", "state machine [%s] not found", errors.Error)
	ErrorInGrpcClientNotFound                = config.GetError("INFRA-12", "client [%s] not found", errors.Error)
	ErrorInvalidInputFields                  = config.GetError("INFRA-13", "Key: '%s' Error:Field validation for '%s' failed on the '%s' tag", errors.Info)
	ErrorAuthorizationMissing                = config.GetError("INFRA-14", "Header Authorization missing", errors.Error)
	ErrorUnexpectedSigninMethod              = config.GetError("INFRA-15", "Unauthorized - unexpected signing method: %v", errors.Error)
	ErrorNoClaimsFound                       = config.GetError("INFRA-16", "No claims found - cannot create JWT", errors.Error)
	ErrorTokenStringEmpty                    = config.GetError("INFRA-17", "JWT Token string is empty", errors.Error)
	ErrorMissingSignatureCookie              = config.GetError("INFRA-18", "Missing signature cookie", errors.Error)
	ErrorDatabase                            = config.GetError("INFRA-19", "Something went wrong, please contact an administrator", errors.Error)
	ErrorSQS                                 = config.GetError("INFRA-20", "Something went wrong, please contact an administrator [SQS]", errors.Error)
	ErrorElastic                             = config.GetError("INFRA-21", "Something went wrong, please contact an administrator [ES]", errors.Error)
	ErrorRedis                               = config.GetError("INFRA-22", "Something went wrong, please contact an administrator [R]", errors.Error)
	ErrorFieldEmpty                          = config.GetError("INFRA-23", "The field [%s] can not be empty", errors.Error)
	ErrorFieldMinValue                       = config.GetError("INFRA-24", "The field [%s] do not met the minimum value [%s]", errors.Error)
	ErrorFieldMaxValue                       = config.GetError("INFRA-25", "The field [%s] has exceeded the value [%s]", errors.Error)
	ErrorFieldMinSize                        = config.GetError("INFRA-26", "The field [%s] do not met the minimum size [%s]", errors.Error)
	ErrorFieldMaxSize                        = config.GetError("INFRA-27", "The field [%s] has exceeded the size [%s]", errors.Error)
	ErrorFieldSize                           = config.GetError("INFRA-28", "The field [%s] should have the size [%s]", errors.Error)
	ErrorStateMachineHealthCheck             = config.GetError("INFRA-29", "State Machine [%s] Health Check Info: %s", errors.Error)
	ErrorDatatableSearchableColumn           = config.GetError("INFRA-30", "Some searchable column doesn't have an alias. Please add it if you want to use this search", errors.Error)
	ErrorDatatableFields                     = config.GetError("INFRA-31", "Some filters Fields doesn't have an alias. Please add it if you want to use this search", errors.Error)
	ErrorDatatableGroup                      = config.GetError("INFRA-32", "The group column doesn't have an alias. Please add it if you want to use this search", errors.Error)
	ErrorInvalidApiKey                       = config.GetError("INFRA-33", "The provided API key is invalid", errors.Error)
	ErrorInvalidBearerKey                    = config.GetError("INFRA-34", "Invalided Bearer key", errors.Error)
	ErrorCreatingDirectory                   = config.GetError("INFRA-35", "Error creating directory: %s", errors.Error)
	ErrorOpeningFile                         = config.GetError("INFRA-36", "Error opening file: %s", errors.Error)
	ErrorWritingFile                         = config.GetError("INFRA-37", "Error writing file: %s", errors.Error)
	ErrorWritingConsole                      = config.GetError("INFRA-38", "Error writing console", errors.Error)
	ErrorCreatingQueue                       = config.GetError("INFRA-39", "Error creating queue %s: %s", errors.Error)
	ErrorLoadingConfigFile                   = config.GetError("INFRA-40", "Error loading config file %s: %s", errors.Error)
	ErrorInSQSClientNotFound                 = config.GetError("INFRA-41", "client [%s] not found", errors.Error)
	ErrorInRabbitmqClientNotFound            = config.GetError("INFRA-42", "client [%s] not found", errors.Error)
	ErrorRabbitmq                            = config.GetError("INFRA-43", "Something went wrong, please contact an administrator [RABBITMQ]", errors.Error)
	ErrorRabbitmqFallback                    = config.GetError("INFRA-44", "Error in RabbitMQ fallback writer: %s", errors.Error)
	ErrorSQSFallback                         = config.GetError("INFRA-45", "Error in SQS fallback writer: %s", errors.Error)
	ErrorGettingQueue                        = config.GetError("INFRA-46", "Error getting queue %s: %s", errors.Error)
)
